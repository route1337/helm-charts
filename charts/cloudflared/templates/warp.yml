{{- if .Values.warp.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.clusterName }}-warp
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.clusterName }}-cloudflared-warp
  replicas: {{ .Values.warp.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Values.clusterName }}-cloudflared-warp
      annotations:
        prometheus.io/port: {{ .Values.warp.metricsPort | quote }}
        prometheus.io/scrape: 'true'
        {{- if .Values.warp.annotations }}
        {{- with .Values.warp.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
    spec:
{{- if .Values.warp.spreadPods }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: {{ .Values.clusterName }}-cloudflared-warp
{{- end }}
      containers:
      - name: {{ .Values.clusterName }}-cloudflared-warp
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: Always
        args:
        - tunnel
        - --metrics
        - "0.0.0.0:{{ .Values.warp.metricsPort }}"
        - --no-autoupdate
        - run
        - --token=$(CF_TOKEN)
        env:
{{- if .Values.warp.consoleTokenSecret.manuallyCreatedSecret }}
          - name: CF_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ .Values.warp.consoleTokenSecret.manuallyCreatedSecret }}
                key: console_token
{{- else }}
          - name: CF_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ .Values.clusterName }}-warp
                key: console_token
{{- end }}
        livenessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.warp.metricsPort }}
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.warp.metricsPort }}
            scheme: HTTP
        startupProbe:
          httpGet:
            path: /ready
            port: {{ .Values.warp.metricsPort }}
            scheme: HTTP
          failureThreshold: 60
          periodSeconds: 10
{{- end }}
